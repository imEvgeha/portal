// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`NexusArray should match snapshot 1`] = `
<div
  className="nexus-c-array "
>
  <Field
    defaultValue={
      Array [
        Object {
          "comment": "yyyyy",
          "country": "IL",
          "dateSelected": null,
          "dateWithdrawn": null,
          "hide": null,
          "rightContractStatus": "Pending",
          "selected": false,
          "vuContractId": Array [],
        },
        Object {
          "comment": "",
          "country": "US",
          "dateSelected": null,
          "dateWithdrawn": null,
          "hide": null,
          "rightContractStatus": "MatchedOnce",
          "selected": false,
          "vuContractId": Array [],
        },
      ]
    }
    isRequired={false}
    name=""
    validate={[Function]}
  >
    <Component />
  </Field>
  <div
    className="nexus-c-array__add"
  >
    <Button
      className="p-button-outlined p-button-secondary nexus-c-dynamic-form__add-button"
      label="+ Add territory"
      onClick={[Function]}
    />
  </div>
  <div
    className="nexus-c-array__objects"
  >
    <div
      className="nexus-c-array__object"
      key="0"
    >
      <div
        className="nexus-c-array__remove-button"
        onClick={[Function]}
      >
        <EditorCloseIcon
          size="medium"
        />
      </div>
      <div
        className="row"
      >
        <div
          className="col-6 array-field-wrapper"
          key="nexus-c-array__field selected"
        >
          <Restricted>
            <NexusField
              allData={Object {}}
              castCrewConfig={Object {}}
              config={Array []}
              dateType=""
              dependencies={Array []}
              forMetadata={false}
              formData={Object {}}
              getCurrentValues={[Function]}
              getValues={[Function]}
              id="[0].selected"
              inModal={false}
              initialData={
                Object {
                  "comment": "yyyyy",
                  "country": "IL",
                  "dateSelected": null,
                  "dateWithdrawn": null,
                  "hide": null,
                  "rightContractStatus": "Pending",
                  "selected": false,
                  "vuContractId": Array [],
                }
              }
              isClearable={false}
              isEditable={true}
              isGridLayout={false}
              isHighlighted={false}
              isOptional={false}
              isReadOnly={true}
              isReadOnlyInEdit={false}
              isRequired={false}
              isRequiredVZ={false}
              isReturningTime={true}
              isTitlePage={false}
              isVerticalLayout={false}
              key="[0].selected"
              label="Selected"
              labels={Array []}
              linkConfig={Object {}}
              name="[0].selected"
              oneIsRequiredVZ={false}
              optionsConfig={Object {}}
              path="territory.selected"
              pathName=""
              sectionID=""
              selectValues={Object {}}
              setFieldValue={[MockFunction]}
              setUpdate={[Function]}
              setUpdatedValues={[Function]}
              shouldStackLabel={true}
              shouldUpperCase={false}
              showLocalized={false}
              stackLabel={false}
              tooltip={null}
              type="boolean"
              useCurrentDate={false}
              validation={Array []}
              validationError={null}
              view="EDIT"
            />
          </Restricted>
        </div>
        <div
          className="col-6 array-field-wrapper"
          key="nexus-c-array__field country"
        >
          <Restricted>
            <NexusField
              allData={Object {}}
              castCrewConfig={Object {}}
              config={Array []}
              dateType=""
              dependencies={Array []}
              forMetadata={false}
              formData={Object {}}
              getCurrentValues={[Function]}
              getValues={[Function]}
              id="[0].country"
              inModal={false}
              initialData={
                Object {
                  "comment": "yyyyy",
                  "country": "IL",
                  "dateSelected": null,
                  "dateWithdrawn": null,
                  "hide": null,
                  "rightContractStatus": "Pending",
                  "selected": false,
                  "vuContractId": Array [],
                }
              }
              isClearable={false}
              isEditable={true}
              isGridLayout={false}
              isHighlighted={false}
              isOptional={false}
              isReadOnly={false}
              isReadOnlyInEdit={false}
              isRequired={false}
              isRequiredVZ={false}
              isReturningTime={true}
              isTitlePage={false}
              isVerticalLayout={false}
              key="[0].country"
              label="Country"
              labels={Array []}
              linkConfig={Object {}}
              name="[0].country"
              oneIsRequiredVZ={false}
              optionsConfig={Object {}}
              path="territory.country"
              pathName=""
              sectionID=""
              selectValues={Object {}}
              setFieldValue={[MockFunction]}
              setUpdate={[Function]}
              setUpdatedValues={[Function]}
              shouldStackLabel={true}
              shouldUpperCase={false}
              showLocalized={false}
              stackLabel={false}
              tooltip={null}
              type="string"
              useCurrentDate={false}
              validation={Array []}
              validationError={null}
              view="EDIT"
            />
          </Restricted>
        </div>
      </div>
    </div>
    <div
      className="nexus-c-array__object"
      key="1"
    >
      <div
        className="nexus-c-array__remove-button"
        onClick={[Function]}
      >
        <EditorCloseIcon
          size="medium"
        />
      </div>
      <div
        className="row"
      >
        <div
          className="col-6 array-field-wrapper"
          key="nexus-c-array__field selected"
        >
          <Restricted>
            <NexusField
              allData={Object {}}
              castCrewConfig={Object {}}
              config={Array []}
              dateType=""
              dependencies={Array []}
              forMetadata={false}
              formData={Object {}}
              getCurrentValues={[Function]}
              getValues={[Function]}
              id="[1].selected"
              inModal={false}
              initialData={
                Object {
                  "comment": "",
                  "country": "US",
                  "dateSelected": null,
                  "dateWithdrawn": null,
                  "hide": null,
                  "rightContractStatus": "MatchedOnce",
                  "selected": false,
                  "vuContractId": Array [],
                }
              }
              isClearable={false}
              isEditable={true}
              isGridLayout={false}
              isHighlighted={false}
              isOptional={false}
              isReadOnly={true}
              isReadOnlyInEdit={false}
              isRequired={false}
              isRequiredVZ={false}
              isReturningTime={true}
              isTitlePage={false}
              isVerticalLayout={false}
              key="[1].selected"
              label="Selected"
              labels={Array []}
              linkConfig={Object {}}
              name="[1].selected"
              oneIsRequiredVZ={false}
              optionsConfig={Object {}}
              path="territory.selected"
              pathName=""
              sectionID=""
              selectValues={Object {}}
              setFieldValue={[MockFunction]}
              setUpdate={[Function]}
              setUpdatedValues={[Function]}
              shouldStackLabel={true}
              shouldUpperCase={false}
              showLocalized={false}
              stackLabel={false}
              tooltip={null}
              type="boolean"
              useCurrentDate={false}
              validation={Array []}
              validationError={null}
              view="EDIT"
            />
          </Restricted>
        </div>
        <div
          className="col-6 array-field-wrapper"
          key="nexus-c-array__field country"
        >
          <Restricted>
            <NexusField
              allData={Object {}}
              castCrewConfig={Object {}}
              config={Array []}
              dateType=""
              dependencies={Array []}
              forMetadata={false}
              formData={Object {}}
              getCurrentValues={[Function]}
              getValues={[Function]}
              id="[1].country"
              inModal={false}
              initialData={
                Object {
                  "comment": "",
                  "country": "US",
                  "dateSelected": null,
                  "dateWithdrawn": null,
                  "hide": null,
                  "rightContractStatus": "MatchedOnce",
                  "selected": false,
                  "vuContractId": Array [],
                }
              }
              isClearable={false}
              isEditable={true}
              isGridLayout={false}
              isHighlighted={false}
              isOptional={false}
              isReadOnly={false}
              isReadOnlyInEdit={false}
              isRequired={false}
              isRequiredVZ={false}
              isReturningTime={true}
              isTitlePage={false}
              isVerticalLayout={false}
              key="[1].country"
              label="Country"
              labels={Array []}
              linkConfig={Object {}}
              name="[1].country"
              oneIsRequiredVZ={false}
              optionsConfig={Object {}}
              path="territory.country"
              pathName=""
              sectionID=""
              selectValues={Object {}}
              setFieldValue={[MockFunction]}
              setUpdate={[Function]}
              setUpdatedValues={[Function]}
              shouldStackLabel={true}
              shouldUpperCase={false}
              showLocalized={false}
              stackLabel={false}
              tooltip={null}
              type="string"
              useCurrentDate={false}
              validation={Array []}
              validationError={null}
              view="EDIT"
            />
          </Restricted>
        </div>
      </div>
    </div>
  </div>
</div>
`;

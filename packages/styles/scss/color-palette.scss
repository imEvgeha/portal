$palette: (
    black: #000,
    white: #fff,
    green: #2faf97,
    orange: #dd9d10,
    red: #aa214b,
    blue: #1c90cc,
);

/**
 * Returns the color with the given transparency.
 * Colors are defined in the $palette
 * Given transparency should be in the list defined in the function else it returns with transparency 1
 * Given color should be defined in $palette else returns black with transparency 1
 * Usage: background: palette(red, 20);
 */
@function palette($color, $tone) {
    @warn map-get($palette,$color);

    $transparency-list: 100, 80, 55, 20, 10, 8, 5, 2;
    @if map-has-key($palette, $color) {
        $color: map-get($palette, $color);
        @if (null != index($transparency-list, $tone)) {
            $transparency: $tone/100;
            @return rgba($color, $transparency);
        }

        @warn "unknown tone `#{$tone}` in color";
        @return rgba($color, 1);
    }

    @warn "unknown color `#{$color}` in palette";
    $color: map-get($palette, black);
    @return rgba($color, 1);
}

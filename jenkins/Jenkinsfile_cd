pipeline {
    agent { label 'usla-jknd-p004' }

    environment {
        IMAGE_TAG = "${env.imageTag}"
        DEPLOY_DEV = "${env.deployDev}"
        DEPLOY_QA = "${env.deployQa}"
    }

    stages {
        stage('Check Prerequisites') {
            steps {
                script {
                    echo sh(returnStdout: true, script: 'env')
                    if (env.imageTag.isEmpty()) {
                        echo 'Image Tag is empty'
                        error("Build failed because of no Image Tag input..")
                    }
                    if (!DEPLOY_DEV.toBoolean() && !DEPLOY_QA.toBoolean()) {
                        echo 'No selected deployment - DEV (and/or) QA option is needed'
                        error("No selected deployment - DEV (and/or) QA option is needed..")
                    }
                }
            }
        }

        stage('Kubernetes Deployment') {
            steps {
                script {
                    echo DEPLOY_DEV
                    echo DEPLOY_QA
                    if (DEPLOY_DEV.toBoolean()) {
                        echo 'Deploying to DEV ...'
                        // deploy
                        dir('kubernetes') {
                            git url: 'git@github-us.production.tvn.com:Nexus/kubernetes.git'
                            script {
                                imageTag = imageTag ?: sh(returnStdout: true, script: "./image-versions.sh dev nexus-avails portal").trim()
                                echo imageTag
                            }
                        }
                        dir('kubernetes/nexus-avails/portal') {
                            sh "./deploy.sh dev nexus-avails ${IMAGE_TAG}"
                        }
                    } else if (DEPLOY_QA.toBoolean()) {
                        echo 'Deploying to QA ...'

                        dir('kubernetes') {
                            git url: 'git@github-us.production.tvn.com:Nexus/kubernetes.git'
                            script {
                                imageTag = imageTag ?: sh(returnStdout: true, script: "./image-versions.sh qa nexus-avails portal").trim()
                                echo imageTag
                            }
                        }
                        dir('kubernetes/nexus-avails/portal') {
                            sh "./deploy.sh qa nexus-avails ${IMAGE_TAG}"
                        }
                    } else {
                        echo 'No Environment has been selected for Deployment'
                    }
                }
            }
        }
    }
    post {
        success {
            sh 'echo Finished Successfully'
            script {
                if (DEPLOY_DEV.toBoolean()) {
                    mail to: 'Vikings-VU@Amdocs.onmicrosoft.com', subject: "DEV Environment Updated!", body: "DEV Environment has been upgraded with Build: ${env.imageTag}. \nParams: \nDeploy Dev: ${env.DEPLOY_DEV} \nDeploy QA: ${env.DEPLOY_QA} \n\nURL: ${env.BUILD_URL}. "
                } else if (DEPLOY_QA.toBoolean()) {
                    mail to: 'Vikings-VU@Amdocs.onmicrosoft.com', subject: "QA Environment Updated!", body: "QA Environment has been upgraded with Build: ${env.imageTag}. \nParams: \nDeploy Dev: ${env.DEPLOY_DEV} \nDeploy QA: ${env.DEPLOY_QA} \n\nURL: ${env.BUILD_URL}. "
                }
            }
        }
        failure {
            script {
                if(env.imageTag.isEmpty()) {
                    mail to: 'Vikings-VU@Amdocs.onmicrosoft.com', subject: "CD FAILED - ${env.BUILD_DISPLAY_NAME} - missing ImageTag", body: "Reason: Failed due to missing ImageTag parameter \nBuild: ${env.BUILD_TAG}. \n\nBuild URL: ${env.BUILD_URL}"
                } else{
                    mail to: 'Vikings-VU@Amdocs.onmicrosoft.com', subject: "CD FAILED - ${env.BUILD_DISPLAY_NAME}", body: "Reason: Please check job for more information. \nBuild: ${env.BUILD_TAG} failed. \n\nBuild URL: ${env.BUILD_URL}"
                }
            }
        }
    }  // Post
}

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DopTasksView should match snapshot 1`] = `
<div
  className="nexus-c-dop-tasks-view"
>
  <div
    className="row align-items-center mx-3 my-3"
  >
    <div
      className="col-2"
    >
      <h1>
        DOP Tasks
      </h1>
    </div>
    <div
      className="col-2 text-start"
    >
      <QueuedTasks
        onChange={[Function]}
        value="user"
      />
    </div>
    <div
      className="col-2 text-start"
    >
      <NexusSavedTableDropdown
        applyPredefinedTableView={[Function]}
        columnApi={null}
        currentUserView={Object {}}
        externalFilter={
          Object {
            "user": "user",
          }
        }
        gridApi={null}
        isDisabled={false}
        onUserDefinedViewSelected={[Function]}
        previousGridState={Array []}
        setBlockLastFilter={[Function]}
        setCurrentUserView={[Function]}
        setUserDefinedGridState={[Function]}
        tableLabels={
          Object {
            "predifinedViewsLabel": "Predefined Views",
            "savedDropdownLabel": "Saved Table View:",
            "savedViewslabel": "My Saved Views",
          }
        }
        tableOptions={
          Array [
            Object {
              "label": "All",
              "value": "all",
            },
            Object {
              "label": "Open",
              "value": "open",
            },
            Object {
              "label": "Not Started",
              "value": "notStarted",
            },
            Object {
              "label": "In Progress",
              "value": "inProgress",
            },
            Object {
              "label": "Closed",
              "value": "closed",
            },
          ]
        }
        updateColumnsAction={[Function]}
        userDefinedGridStates={Array []}
        username=""
      />
    </div>
    <div
      className="col-6 text-end"
    >
      <Button
        className="p-button-text mx-2"
        icon="po po-reload"
        onClick={[Function]}
        tooltip="Refresh"
        tooltipOptions={
          Object {
            "appendTo": "self",
            "position": "left",
          }
        }
      />
    </div>
  </div>
  <DopTasksTable
    assignTasks={[Function]}
    changePriority={[Function]}
    externalFilter={
      Object {
        "user": "user",
      }
    }
    setColumnApi={[Function]}
    setExternalFilter={[Function]}
    setGridApi={[Function]}
    unAssignTasks={[Function]}
  />
</div>
`;

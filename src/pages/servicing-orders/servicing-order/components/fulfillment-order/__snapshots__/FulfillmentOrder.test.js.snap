// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`FulfillmentOrder HTML content should match snapshot 1`] = `
<Page>
  <div
    className="fulfillment-order__section"
  >
    <GridColumn>
      <div
        className="fulfillment-order"
      >
        <div
          className="fulfillment-order__row fulfillment-order__header"
        >
          <div
            className="fulfillment-order__title"
          >
            <div
              className="fulfillment-order__title--text"
            >
              Fulfillment Order
            </div>
            <div>
              Order ID: 
            </div>
          </div>
          <div
            className="fulfillment-order__save-buttons"
          >
            <ButtonGroup>
              <Button
                isDisabled={null}
                onClick={[Function]}
              >
                Cancel
              </Button>
              <LoadingButton
                appearance="primary"
                isDisabled={true}
                isLoading={Object {}}
                onClick={[Function]}
              >
                Save
              </LoadingButton>
            </ButtonGroup>
          </div>
        </div>
        <GridWrapper
          layout="fluid"
        >
          <GridColumn
            medium={3}
          >
            <div
              className="nexus-fo-date-readonly"
            >
              Servicer:
               
              <Lozenge
                appearance="new"
              />
            </div>
            <div
              className="nexus-fo-date-readonly"
            >
              Start Date:
               
              <Lozenge>
                Invalid date
              </Lozenge>
            </div>
            <div
              className="nexus-fo-date-readonly"
            >
              Due Date:
               
              <Lozenge>
                Invalid date
              </Lozenge>
            </div>
            <div>
              <div>
                <input
                  defaultChecked={false}
                  disabled={true}
                  id="inp-premiering"
                  onClick={[Function]}
                  type="checkbox"
                />
                <label
                  className="fo-gridhdr-radio"
                  htmlFor="inp-premiering"
                >
                  Premiering
                </label>
              </div>
            </div>
            <div>
              <div>
                <input
                  defaultChecked={true}
                  disabled={true}
                  id="inp-watermark"
                  onClick={[Function]}
                  type="checkbox"
                />
                <label
                  className="fo-gridhdr-radio"
                  htmlFor="inp-watermark"
                >
                  Watermark
                </label>
              </div>
            </div>
            <div>
              <div>
                <input
                  defaultChecked={true}
                  disabled={true}
                  id="inp-late"
                  onClick={[Function]}
                  type="checkbox"
                />
                <label
                  className="fo-gridhdr-radio"
                  htmlFor="inp-late"
                >
                  Late
                </label>
              </div>
            </div>
          </GridColumn>
          <GridColumn
            medium={3}
          >
            <div
              className="fulfillment-order__input"
            >
              <Dropdown
                id="market-type"
                labelProps={
                  Object {
                    "label": "Market Type",
                    "shouldUpper": false,
                    "stacked": true,
                  }
                }
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "NONE",
                      "value": null,
                    },
                    Object {
                      "label": "Major",
                      "value": "MAJOR",
                    },
                    Object {
                      "label": "Minor",
                      "value": "MINOR",
                    },
                  ]
                }
                value="Major"
              />
            </div>
            <div
              className="fulfillment-order__input"
            >
              <Dropdown
                disabled={true}
                id="late-fault"
                labelProps={
                  Object {
                    "label": "Late At Fault",
                    "shouldUpper": false,
                    "stacked": true,
                  }
                }
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "NONE",
                      "value": null,
                    },
                  ]
                }
                value="Everyone is at fault"
              />
            </div>
          </GridColumn>
          <GridColumn
            medium={3}
          >
            <div
              className="fulfillment-order__input"
            >
              <Tooltip
                content="Not sure what is this field"
                position="bottom"
                target=".lbl-car"
              />
              <InputText
                className="lbl-car"
                disabled={true}
                id="car"
                labelProps={
                  Object {
                    "htmlFor": "car",
                    "label": "Car",
                    "shouldUpper": true,
                    "stacked": true,
                  }
                }
                name="CAR"
                onChange={[Function]}
                value="Not sure what is this field"
              />
            </div>
            <div
              className="fulfillment-order__input"
            >
              <Dropdown
                className="late-reason-ddl"
                disabled={true}
                id="late-reason"
                labelProps={
                  Object {
                    "label": "Late Reason",
                    "shouldUpper": false,
                    "stacked": true,
                  }
                }
                onChange={[Function]}
                options={Array []}
                tooltip="The dog ate my homework"
                tooltipOptions={
                  Object {
                    "position": "bottom",
                  }
                }
                value="The dog ate my homework"
              />
            </div>
          </GridColumn>
          <GridColumn
            medium={3}
          >
            <div
              className="fulfillment-order__input"
            >
              <Tooltip
                content="0 errors"
                target=".late-reason-lbl"
              />
              <InputText
                disabled={true}
                id="fulfillmentStatus"
                labelProps={
                  Object {
                    "additionalLabel": <i
                      className="pi pi-exclamation-circle mx-2 error-icon grey"
                      onClick={[Function]}
                    />,
                    "className": "late-reason-lbl",
                    "htmlFor": "fulfillmentStatus",
                    "label": "Fulfillment Status",
                    "shouldUpper": false,
                    "stacked": true,
                  }
                }
                name="fulfillment-status"
                value=""
              />
            </div>
            <div
              className="fulfillment-order__input"
            >
              <Dropdown
                className="fulfillment-order__readiness-status"
                disabled={false}
                id="readiness-status"
                labelProps={
                  Object {
                    "label": "Readiness Status",
                    "shouldUpper": false,
                    "stacked": true,
                  }
                }
                onChange={[Function]}
                options={
                  Array [
                    Object {
                      "label": "New",
                      "value": "NEW",
                    },
                    Object {
                      "label": "On Hold",
                      "value": "ON_HOLD",
                    },
                    Object {
                      "label": "Ready",
                      "value": "READY",
                    },
                  ]
                }
                value=""
              />
            </div>
            <InputTextarea
              disabled={true}
              id="txtAreaNotes"
              labelProps={
                Object {
                  "label": "Notes",
                  "shouldUpper": false,
                  "stacked": true,
                }
              }
              name="notes"
              onChange={[Function]}
              value="Lorem ipsum dolor sit amet, consectetur adipiscing elit."
            />
          </GridColumn>
        </GridWrapper>
        <hr />
      </div>
    </GridColumn>
  </div>
</Page>
`;

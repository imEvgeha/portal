// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SelectedRightsActions SelectedRightsActions should match snapshot 1`] = `
<div
  className="selected-rights-actions"
>
  <div
    className="nexus-c-selected-rights-actions d-flex align-items-center"
  >
    <Restricted
      roles={
        Object {
          "operation": "AND",
          "values": Array [
            "dop_viewer",
          ],
        }
      }
    >
      <div
        className="nexus-c-selected-rights-actions__menu-item"
        data-test-id="view-history"
        onClick={[Function]}
      >
        <div>
          History
        </div>
      </div>
    </Restricted>
    <div
      className="nexus-c-selected-rights-actions__menu-item"
      data-test-id="bulk-match"
      onClick={[Function]}
    >
      <NexusTooltip
        content="This feature is enabled when:
All selected rights have same content type,
have Core Title IDs un-populated,
either all are bonus rights(with unique sourceRightId) or none"
        hasWhiteBackground={false}
        isDisabled={false}
      >
        <div>
          Match
        </div>
      </NexusTooltip>
    </div>
    <div
      className="nexus-c-selected-rights-actions__menu-item"
      data-test-id="bulk-unmatch"
      onClick={[Function]}
    >
      <NexusTooltip
        content="This feature is enabled when:
All selected rights have Core Title IDs populated,
either all are bonus rights(with unique sourceRightId) or none"
        hasWhiteBackground={false}
        isDisabled={false}
      >
        <div>
          Unmatch
        </div>
      </NexusTooltip>
    </div>
    <div
      className="nexus-c-selected-rights-actions__menu-item"
      data-test-id="bonus-rights"
      onClick={[Function]}
    >
      <NexusTooltip
        content="This feature is enabled when selected
rights are licensed,
have the same Core Title IDs (not blank),
empty Source Right IDs,
Status is Ready/ReadyNew,
Removed from Catalogue = No
and Temporary Price Reduction = false"
        hasWhiteBackground={false}
        isDisabled={false}
      >
        <div>
          Bonus
        </div>
      </NexusTooltip>
    </div>
    <div
      className="nexus-c-selected-rights-actions__menu-item"
      data-test-id="add-to-preplan"
      onClick={[Function]}
    >
      <NexusTooltip
        content="Select Right to enable this feature"
        hasWhiteBackground={false}
        isDisabled={false}
      >
        <div>
          Pre-Plan
        </div>
      </NexusTooltip>
    </div>
    <div
      className="nexus-c-selected-rights-actions__menu-item"
      data-test-id="mark-as-deleted"
      onClick={[Function]}
    >
      <NexusTooltip
        content="This option will mark a right as deleted and can no longer be used.
Alternatively you may withdraw a right which can be re-instantiated later."
        hasWhiteBackground={false}
        isDisabled={false}
      >
        <div>
          Delete
        </div>
      </NexusTooltip>
    </div>
  </div>
  <NexusDrawer
    direction="fromRight"
    headerContent={null}
    isClosedOnBlur={false}
    isLoading={false}
    isOpen={false}
    onClose={[Function]}
    title=""
    width="wider"
  >
    <Connect(Connect(ComposedComponent))
      closeDrawer={[Function]}
      data={Array []}
      headerText=""
      isBonusRight={false}
      onReloadData={[Function]}
      setHeaderText={[Function]}
    />
  </NexusDrawer>
</div>
`;
